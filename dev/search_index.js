var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = TSx","category":"page"},{"location":"#TSx","page":"Home","title":"TSx","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for TSx.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [TSx]","category":"page"},{"location":"#TSx.TS","page":"Home","title":"TSx.TS","text":"TS\n\nA type to hold ordered data with an index.\n\nA TS object is essentially a DataFrame with a specific column marked as an index and has the name Index. The DataFrame is sorted using index values during construction.\n\nConstructors\n\nTS(coredata::DataFrame, index::Union{String, Symbol, Int}=1)\nTS(coredata::DataFrame, index::AbstractVector{T}) where {T<:Int}\nTS(coredata::DataFrame, index::UnitRange{Int})\nTS(coredata::AbstractVector{T}, index::AbstractVector{V}) where {T, V}\nTS(coredata::AbstractVector{T}) where {T}\nTS(coredata::AbstractArray{T,2}, meta::Dict=Dict{String, Any}()) where {T}\n\nExamples\n\njulia> df = DataFrame(x1 = randn(10))\njulia> TS(df)\n\njulia> df = DataFrame(Index = [1, 2, 3], x1 = randn(3))\njulia> TS(df, 1)\n\njulia> dates = collect(Date(2017,1,1):Day(1):Date(2017,1,10))\njulia> df = DataFrame(dates = dates, x1 = randn(10))\njulia> TS(df, :dates)\njulia> TS(DataFrame(x1=randn(10), dates))\n\njulia> TS(randn(10))\njulia> TS(randn(10), dates)\n\n\n\n\n\n","category":"type"}]
}
